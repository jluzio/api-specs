openapi: 3.0.3
info:
  title: todo-api
  description: OpenAPI for todo
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
tags:
  - name: todo
paths:

  /todos:
    get:
      summary: Returns a list of todos.
      description: Returns a list of todos.
      operationId: getTodos
      tags:
        - todo
      parameters:
        - name: ids
          in: query
#          explode: false
          required: false
          schema:
            type: array
            items:
              type: integer
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: completed
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
    post:
      summary: Creates a todo.
      description: Creates a todo.
      operationId: createTodo
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoCreateRequest'
# Was unable to mix both with Spring
#          application/x-www-form-urlencoded:
#            schema:
#              $ref: '#/components/schemas/TodoCreateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  /todos/form-data:
    post:
      summary: Creates a todo.
      description: Creates a todo.
      operationId: createTodoFormData
      tags:
        - todo
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoCreateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  /todos/{id}:
    get:
      summary: Returns a todo.
      description: Returns a todo.
      operationId: getTodo
      tags:
        - todo
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'

components:
  schemas:
    TodoList:
      type: array
      items:
        $ref: '#/components/schemas/Todo'
    Todo:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        title:
          type: string
        completed:
          type: boolean
        startTime:
          type: string
          format: date-time
        deadline:
          type: string
          format: date-time
    TodoCreateRequest:
      type: object
      properties:
        userId:
          type: integer
        title:
          type: string
        completed:
          type: boolean
        startTime:
          type: string
          format: date-time
        deadline:
          type: string
          format: date-time
      required:
        - userId
        - title
